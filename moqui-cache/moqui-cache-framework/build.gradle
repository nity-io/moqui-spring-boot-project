
dependencies {
    compile project(':moqui-framework')

    // Groovy
    compile 'org.codehaus.groovy:groovy:2.5.4' // Apache 2.0
    
    //groovydoc
    compileOnly 'org.codehaus.groovy:groovy-templates:2.5.4' // Apache 2.0
    compileOnly 'org.fusesource.jansi:jansi:1.17.1'
    
    // Findbugs need only during compile (used by freemarker and various moqui classes)
    compileOnly 'com.google.code.findbugs:annotations:3.0.1'
    
    // Java Specifications
    compile 'javax.cache:cache-api:1.1.0'
    
    // SLF4J
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    // ========== test dependencies ==========
    // spock-core depends on groovy-all but we are including selected groovy modules, so don't get its dependencies
    testCompile module('org.spockframework:spock-core:1.1-groovy-2.4') // Apache 2.0
    testCompile 'junit:junit:4.12' // Apache 2.0
}


test {
    dependsOn cleanTest
    include '**/*MoquiSuite.class'

    testLogging.showStandardStreams = true; testLogging.showExceptions = true

    classpath += files(sourceSets.main.output.classesDirs); classpath += files(projectDir.absolutePath)
    // filter out classpath entries that don't exist (gradle adds a bunch of these), or ElasticSearch JarHell will blow up
    classpath = classpath.filter { it.exists() }

    beforeTest { descriptor -> logger.lifecycle("Running test: ${descriptor}") }
}
